"""Make favourites.ts"""
from file_names import FAVOURITE_TS

def make_js_string(text):
    """Make a JS string"""
    if text != "" and text[0] == '"':
        return text
    else:
        return f'"{text}"'

def make_js_boolean(boolean):
    """Make a JS boolean"""
    return "true" if boolean else "false"

def make_js_times(times):
    """Make JS representation of single time of dictionary giving time for various dates."""
    if isinstance(times, str):
        return make_js_string(times)
    else:
        js = "{"
        for date in times:
            time = times[date]
            js += f'{date}:"{time}", '
        js += "}"
        return js

def make_output_line(info):
    """Make a line for favourites.js"""

    title = make_js_string(info["title"])
    venue = make_js_string(info["venue"])
    duration = make_js_string(info["duration"])
    times = make_js_times(info["times"])
    dates = make_js_string(info["dates"])
    rating=make_js_string(info["rating"])
    booked = make_js_boolean(info["booked"])
    url=make_js_string(info["url"])

    data = (title,venue,duration,times,dates,url,rating, booked)
    return "["+ ", ".join(data) + "]"

def write_favourites_ts(show_info):
    """Write favourites.ts"""
    with open(FAVOURITE_TS, encoding="windows-1252", mode='w') as favourites_ts:
        favourites_ts.write("//Generated by Python script\n")
        favourites_ts.write("export const favourites = [\n")
        for info in show_info:
            try:
                outline = make_output_line(info)
                favourites_ts.write(f"{outline},\n")

            except Exception as err:   # pylint: disable=broad-except
                print(f'WARNING: Cannot process: {info} while writing favourites.ts\n')
                print(f"Reported error {err}\n")


        favourites_ts.write("] as const;\n")

        print("Done")
